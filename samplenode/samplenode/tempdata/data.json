{ [Function: model]
  base:
   { connections: [ [Object] ],
     plugins: [],
     models: { Customer: [Circular] },
     modelSchemas: { Customer: [Object] },
     options: { pluralization: true } },
  modelName: 'Customer',
  model: [Function: model],
  db:
   { base:
      { connections: [Object],
        plugins: [],
        models: [Object],
        modelSchemas: [Object],
        options: [Object] },
     collections: { customers: [Object] },
     models: { Customer: [Circular] },
     replica: false,
     hosts: null,
     host: '127.0.0.1',
     port: 27017,
     user: undefined,
     pass: undefined,
     name: 'Customer',
     options: { db: [Object], auth: {}, server: [Object], replset: [Object]
     otherDbs: [],
     _readyState: 1,
     _closeCalled: false,
     _hasOpened: true,
     _listening: true,
     _events: {},
     db:
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        databaseName: 'Customer',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1421324792570,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined } },
  discriminators: undefined,
  schema:
   { paths:
      { fname: [Object],
        lname: [Object],
        email: [Object],
        _id: [Object],
        __v: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     nested: {},
     inherits: {},
     callQueue: [],
     _indexes: [],
     methods: {},
     statics: {},
     tree:
      { fname: [Function: String],
        lname: [Function: String],
        email: [Function: String],
        _id: [Object],
        id: [Object],
        __v: [Function: Number] },
     _requiredpaths: undefined,
     discriminatorMapping: undefined,
     _indexedpaths: undefined,
     options:
      { id: true,
        noVirtualId: false,
        _id: true,
        noId: false,
        read: null,
        shardKey: null,
        autoIndex: true,
        minimize: true,
        discriminatorKey: '__t',
        versionKey: '__v',
        capped: false,
        bufferCommands: true,
        strict: true,
        pluralization: true },
     _events: {} },
  options: undefined,
  collection:
   { collection:
      { db: [Object],
        collectionName: 'customers',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined },
     opts: { bufferCommands: true, capped: false },
     name: 'customers',
     conn:
      { base: [Object],
        collections: [Object],
        models: [Object],
        replica: false,
        hosts: null,
        host: '127.0.0.1',
        port: 27017,
        user: undefined,
        pass: undefined,
        name: 'Customer',
        options: [Object],
        otherDbs: [],
        _readyState: 1,
        _closeCalled: false,
        _hasOpened: true,
        _listening: true,
        _events: {},
        db: [Object] },
     queue: [],
     buffer: false } }